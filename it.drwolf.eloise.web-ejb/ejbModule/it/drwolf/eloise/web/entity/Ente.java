package it.drwolf.eloise.web.entity;

// Generated 17-giu-2008 14.55.38 by Hibernate Tools 3.2.0.CR1

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.OrderBy;
import javax.persistence.Table;
import javax.persistence.Transient;

/**
 * Ente generated by hbm2java
 */
@Entity
@Table(name = "`Ente`", catalog = "eloise")
public class Ente implements java.io.Serializable {

	private Integer idente;
	private Boolean visible;
	private String nome;
	private Set<Area> areas = new HashSet<Area>(0);
	private Set<People> peoples = new HashSet<People>(0);
	private Set<Organizationalrole> organizationalroles = new HashSet<Organizationalrole>(
			0);

	public Ente() {
	}

	public Ente(Boolean visible, String nome, Set<Area> areas,
			Set<People> peoples, Set<Organizationalrole> organizationalroles) {
		this.visible = visible;
		this.nome = nome;
		this.areas = areas;
		this.peoples = peoples;
		this.organizationalroles = organizationalroles;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof Ente)) {
			return false;
		}
		Ente other = (Ente) obj;
		if (this.idente == null) {
			if (other.getIdente() != null) {
				return false;
			}
		} else if (!this.idente.equals(other.getIdente())) {
			return false;
		}
		return true;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "ente")
	@OrderBy("nome")
	public Set<Area> getAreas() {
		return this.areas;
	}

	@Transient
	public List<Area> getAreasAsList() {
		return new ArrayList<Area>(this.getAreas());

	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "`IDEnte`", unique = true, nullable = false)
	public Integer getIdente() {
		return this.idente;
	}

	@Column(name = "`Nome`")
	public String getNome() {
		return this.nome;
	}

	@Transient
	public List<Organizationalrole> getOrganizationalroleAsList() {
		return new ArrayList<Organizationalrole>(this.getOrganizationalroles());

	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "ente")
	public Set<Organizationalrole> getOrganizationalroles() {
		return this.organizationalroles;
	}

	@ManyToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY)
	@JoinTable(name = "`People2Ente`", joinColumns = { @JoinColumn(name = "IDEnte", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "IDPeople", nullable = false, updatable = false) })
	public Set<People> getPeoples() {
		return this.peoples;
	}

	@Transient
	public List<People> getPeoplesAsList() {
		return new ArrayList<People>(this.getPeoples());

	}

	@Column(name = "`visible`")
	public Boolean getVisible() {
		return this.visible;
	}

	public void setAreas(Set<Area> areas) {
		this.areas = areas;
	}

	@Transient
	public void setAreasAsList(List<Area> areas) {
		this.setAreas(new HashSet<Area>(areas));
	}

	public void setIdente(Integer idente) {
		this.idente = idente;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	@Transient
	public void setOrganizationalroleAsList(
			List<Organizationalrole> organizationalroles) {
		this.setOrganizationalroles(new HashSet<Organizationalrole>(
				organizationalroles));
	}

	public void setOrganizationalroles(
			Set<Organizationalrole> organizationalroles) {
		this.organizationalroles = organizationalroles;
	}

	public void setPeoples(Set<People> peoples) {
		this.peoples = peoples;
	}

	@Transient
	public void setPeoplesAsList(List<People> peoples) {
		this.setPeoples(new HashSet<People>(peoples));
	}

	public void setVisible(Boolean visible) {
		this.visible = visible;
	}

	@Override
	public String toString() {
		return this.getNome();
	}
}
