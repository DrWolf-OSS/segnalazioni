package it.drwolf.eloise.web.entity;

// Generated 17-giu-2008 14.55.38 by Hibernate Tools 3.2.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.hibernate.validator.Email;
import org.hibernate.validator.NotNull;
import org.hibernate.validator.Pattern;

/**
 * Ufficio generated by hbm2java
 */
@Entity
@Table(name = "`Ufficio`", catalog = "eloise")
public class Ufficio implements java.io.Serializable {

	private Integer idufficio;
	private Area area;
	private Sede sede;
	private Orario orario;
	private Boolean visible;
	private String descrizione;
	private String telefono;
	private String fax;
	private String email;
	private String nome;
	private String fax1;
	private String PEC;
	private Set<People> peoples = new HashSet<People>(0);
	private Set<Organizationalrole> organizationalroles = new HashSet<Organizationalrole>(
			0);

	public Ufficio() {
	}

	public Ufficio(Area area, Sede sede, Orario orario) {
		this.area = area;
		this.sede = sede;
		this.orario = orario;
	}

	public Ufficio(Area area, Sede sede, Orario orario, Boolean visible,
			String descrizione, String telefono, String fax, String email,
			String nome, String fax1, Set<People> peoples,
			Set<Organizationalrole> organizationalroles) {
		this.area = area;
		this.sede = sede;
		this.orario = orario;
		this.visible = visible;
		this.descrizione = descrizione;
		this.telefono = telefono;
		this.fax = fax;
		this.email = email;
		this.nome = nome;
		this.fax1 = fax1;
		this.peoples = peoples;
		this.organizationalroles = organizationalroles;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IDSettore", nullable = false)
	@NotNull
	public Area getArea() {
		return this.area;
	}

	@Column(name = "Descrizione")
	public String getDescrizione() {
		return this.descrizione;
	}

	@Column(name = "EMail")
	public String getEmail() {
		return this.email;
	}

	@Column(name = "Fax")
	public String getFax() {
		return this.fax;
	}

	@Column(name = "Fax1")
	public String getFax1() {
		return this.fax1;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "IDUfficio", unique = true, nullable = false)
	public Integer getIdufficio() {
		return this.idufficio;
	}

	@Column(name = "Nome")
	public String getNome() {
		return this.nome;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IDOrario", nullable = false)
	@NotNull
	public Orario getOrario() {
		return this.orario;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "ufficio")
	public Set<Organizationalrole> getOrganizationalroles() {
		return this.organizationalroles;
	}

	@ManyToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY)
	@JoinTable(name = "`People2Ufficio`", joinColumns = { @JoinColumn(name = "IDUfficio", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "IDPeople", nullable = false, updatable = false) })
	public Set<People> getPeoples() {
		return this.peoples;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IDSede", nullable = false)
	@NotNull
	public Sede getSede() {
		return this.sede;
	}

	@Column(name = "Telefono")
	public String getTelefono() {
		return this.telefono;
	}

	@Column(name = "visible")
	public Boolean getVisible() {
		return this.visible;
	}

	@Pattern(regex="(^$)|(^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}$)", message="Non Ã¨ una email valida")
	public String getPEC() {
		return PEC;
	}

	public void setArea(Area area) {
		this.area = area;
	}

	public void setDescrizione(String descrizione) {
		this.descrizione = descrizione;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public void setFax(String fax) {
		this.fax = fax;
	}

	public void setFax1(String fax1) {
		this.fax1 = fax1;
	}

	public void setIdufficio(Integer idufficio) {
		this.idufficio = idufficio;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	public void setOrario(Orario orario) {
		this.orario = orario;
	}

	public void setOrganizationalroles(
			Set<Organizationalrole> organizationalroles) {
		this.organizationalroles = organizationalroles;
	}

	public void setPeoples(Set<People> peoples) {
		this.peoples = peoples;
	}

	public void setSede(Sede sede) {
		this.sede = sede;
	}

	public void setTelefono(String telefono) {
		this.telefono = telefono;
	}

	public void setVisible(Boolean visible) {
		this.visible = visible;
	}

	public void setPEC(String pEC) {
		PEC = pEC;
	}
	
	@Override
	public String toString() {
		return this.getNome();
	}
	
	@Transient
	public List<People> getPeoplesAsList(){
		return new ArrayList<People>(this.getPeoples());
		
	}
	@Transient
	public void setPeoplesAsList(List<People> peoples){
		this.setPeoples(new HashSet<People>(peoples)); 
	}	
}
