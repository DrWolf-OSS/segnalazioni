package it.drwolf.alerting.entity;

// Generated 17-giu-2008 14.53.44 by Hibernate Tools 3.2.1.GA

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.validator.NotNull;

/**
 * SottotipoSegnalazione generated by hbm2java
 */
@Entity
@Table(name = "SottotipoSegnalazione", catalog = "segnalazioni")
public class SottotipoSegnalazione implements java.io.Serializable {

	/**
	 *
	 */
	private static final long serialVersionUID = -7665072468506882226L;
	private Integer id;
	private TipoSegnalazione tipoSegnalazione;
	private String descrizione;
	private Set<Segnalazione> segnalaziones = new HashSet<Segnalazione>(0);

	public SottotipoSegnalazione() {
	}

	public SottotipoSegnalazione(TipoSegnalazione tipoSegnalazione) {
		this.tipoSegnalazione = tipoSegnalazione;
	}

	public SottotipoSegnalazione(TipoSegnalazione tipoSegnalazione,
			String descrizione, Set<Segnalazione> segnalaziones) {
		this.tipoSegnalazione = tipoSegnalazione;
		this.descrizione = descrizione;
		this.segnalaziones = segnalaziones;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof SottotipoSegnalazione)) {
			return false;
		}
		SottotipoSegnalazione other = (SottotipoSegnalazione) obj;
		if (this.getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!this.getId().equals(other.getId())) {
			return false;
		}
		return true;
	}

	@Column(name = "Descrizione")
	public String getDescrizione() {
		return this.descrizione;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "sottotipoSegnalazione")
	public Set<Segnalazione> getSegnalaziones() {
		return this.segnalaziones;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idTipoSegnalazione", nullable = false)
	@NotNull
	public TipoSegnalazione getTipoSegnalazione() {
		return this.tipoSegnalazione;
	}

	@Override
	public int hashCode() {
		final int prime = 3321;
		int result = 1;
		result = prime * result
				+ ((this.getId() == null) ? 0 : this.getId().hashCode());
		return result;
	}

	public void setDescrizione(String descrizione) {
		this.descrizione = descrizione;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public void setSegnalaziones(Set<Segnalazione> segnalaziones) {
		this.segnalaziones = segnalaziones;
	}

	public void setTipoSegnalazione(TipoSegnalazione tipoSegnalazione) {
		this.tipoSegnalazione = tipoSegnalazione;
	}

	@Override
	public String toString() {
		return this.descrizione;
	}

}
