package it.drwolf.alerting.entity;

// Generated 17-giu-2008 14.53.44 by Hibernate Tools 3.2.1.GA

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * CanaleSegnalazione generated by hbm2java
 */
@Entity
@Table(name = "CanaleSegnalazione")
public class CanaleSegnalazione implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 7917303269972984703L;
	private Integer id;
	private String nome;

	private String descrizioneCanale;

	private Set<Segnalazione> segnalaziones = new HashSet<Segnalazione>(0);

	public CanaleSegnalazione() {
	}

	public CanaleSegnalazione(String descrizioneCanale,
			Set<Segnalazione> segnalaziones) {
		this.descrizioneCanale = descrizioneCanale;
		this.segnalaziones = segnalaziones;
	}

	@Column(name = "DescrizioneCanale")
	public String getDescrizioneCanale() {
		return this.descrizioneCanale;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	@Column(insertable = true, updatable = false, unique = true)
	public String getNome() {
		return this.nome;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "canaleSegnalazione")
	public Set<Segnalazione> getSegnalaziones() {
		return this.segnalaziones;
	}

	public void setDescrizioneCanale(String descrizioneCanale) {
		this.descrizioneCanale = descrizioneCanale;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	public void setSegnalaziones(Set<Segnalazione> segnalaziones) {
		this.segnalaziones = segnalaziones;
	}

	@Override
	public String toString() {
		return this.descrizioneCanale;
	}

}
