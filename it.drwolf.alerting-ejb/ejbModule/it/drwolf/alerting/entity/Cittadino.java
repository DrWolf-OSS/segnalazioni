package it.drwolf.alerting.entity;

// Generated 17-giu-2008 14.53.44 by Hibernate Tools 3.2.1.GA

import static javax.persistence.GenerationType.IDENTITY;
import it.drwolf.iscrizioni.entity.Gruppo;
import it.drwolf.iscrizioni.entity.Iscritto;

import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EntityManager;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.jboss.seam.Component;

/**
 * Cittadino generated by hbm2java
 */
@Entity
@Table(name = "Cittadino")
public class Cittadino {

	private Integer id;
	private String idIscritto;

	private Iscritto iscritto;

	private Set<Segnalazione> segnalaziones = new HashSet<Segnalazione>(0);

	public Cittadino() {
	}

	@Transient
	public String getCap() {
		return this.getIscritto().getCap();
	}

	@Transient
	public String getCellulare() {
		return this.getIscritto().getCellulare();
	}

	@Transient
	public String getCognome() {
		return this.getIscritto().getCognome();
	}

	@Transient
	public Boolean getConfermato() {
		return this.getIscritto().getConfermato();
	}

	@Transient
	public Boolean getConsenso() {
		return this.getIscritto().getConsenso();
	}

	@Transient
	public String getEmail() {
		return this.getIscritto().getEmail();
	}

	@Transient
	public String getFax() {
		return this.getIscritto().getFax();
	}

	@Transient
	public List<Gruppo> getGruppi() {
		return this.getIscritto().getGruppi();
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	@Column(unique = true, nullable = false)
	public String getIdIscritto() {
		return this.idIscritto;
	}

	@Transient
	public String getIndirizzo() {
		return this.getIscritto().getIndirizzo();
	}

	@Transient
	public Iscritto getIscritto() {
		if (this.iscritto == null) {
			EntityManager entityManager = (EntityManager) Component
					.getInstance("entityManager");
			this.iscritto = entityManager.find(Iscritto.class, this
					.getIdIscritto());
			if (this.iscritto == null) {
				this.iscritto = new Iscritto();
			}
		}
		return this.iscritto;
	}

	@Transient
	public String getLocalita() {
		return this.getIscritto().getLocalita();
	}

	@Transient
	public String getNome() {
		return this.getIscritto().getNome();
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "cittadino")
	public Set<Segnalazione> getSegnalaziones() {
		return this.segnalaziones;
	}

	@Transient
	public String getTelefono() {
		return this.getIscritto().getTelefono();
	}

	@Transient
	public String getUsername() {
		return this.idIscritto;
	}

	@Transient
	public boolean hasEmail() {
		return this.getEmail() != null && this.getEmail().length() > 5;
	}

	@Transient
	public boolean hasIndirizzo() {
		return this.getIndirizzo() != null && this.getIndirizzo().length() > 5;
	}

	@Transient
	public boolean hasTel() {
		return this.getTelefono() != null && this.getTelefono().length() > 5;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public void setIdIscritto(String idIscritto) {
		this.idIscritto = idIscritto;
	}

	public void setIscritto(Iscritto iscritto) {
		this.iscritto = iscritto;
	}

	public void setSegnalaziones(Set<Segnalazione> segnalaziones) {
		this.segnalaziones = segnalaziones;
	}

	public String toString() {
		return this.getIscritto().toString();
	}

}
